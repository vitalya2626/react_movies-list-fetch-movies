{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/api.js","components/FindMovie/FindMovie.js","components/FindMovie/FindMovieShape.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","BASE_URL","a","fetch","response","json","result","FindMovie","PropTypes","func","isRequired","arrayOf","shape","string","addMovie","useState","foundMovie","setFoundMovie","setTitle","error","setError","onSubmit","event","preventDefault","some","htmlFor","type","id","placeholder","classNames","value","onChange","target","autoComplete","onClick","getMovie","then","Response","Title","Plot","Poster","imdbID","App","setMovies","length","newMovie","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f97b04ee.chunk.js","sourcesContent":["import React from 'react';\r\nimport './MovieCard.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const MovieCard = ({\r\n  title,\r\n  description = '',\r\n  imgUrl,\r\n  imdbUrl,\r\n}) => (\r\n  <div className=\"card\">\r\n    <div className=\"card-image\">\r\n      <figure className=\"image is-4by3\">\r\n        <img\r\n          src={imgUrl}\r\n          alt=\"Film logo\"\r\n        />\r\n      </figure>\r\n    </div>\r\n    <div className=\"card-content\">\r\n      <div className=\"media\">\r\n        <div className=\"media-left\">\r\n          <figure className=\"image is-48x48\">\r\n            <img\r\n              src=\"images/imdb-logo.jpeg\"\r\n              alt=\"imdb\"\r\n            />\r\n          </figure>\r\n        </div>\r\n        <div className=\"media-content\">\r\n          <p className=\"title is-8\">{title}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"content\">\r\n        {description}\r\n        <br />\r\n        <a href={imdbUrl}>IMDB</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nMovieCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string.isRequired,\r\n  imgUrl: PropTypes.string.isRequired,\r\n  imdbUrl: PropTypes.string.isRequired,\r\n};\r\n","import React from 'react';\r\n\r\nimport './MoviesList.scss';\r\nimport PropTypes from 'prop-types';\r\nimport { MovieCard } from '../MovieCard';\r\n\r\nexport const MoviesList = ({\r\n  movies = [],\r\n}) => (\r\n  <div className=\"movies\">\r\n    {movies.map(movie => (\r\n      <MovieCard key={movie.imdbId} {...movie} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nMoviesList.propTypes = {\r\n  movies: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      imdbId: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n};\r\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=2141f404';\n\nexport async function getMovie(title) {\n  const response = await fetch(`${BASE_URL}&t=[${title}]`);\n\n  const result = await response.json();\n\n  return result;\n}\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api/api';\nimport { FindMovieShape } from './FindMovieShape';\n\nexport const FindMovie = ({ addMovie, movies }) => {\n  const [foundMovie, setFoundMovie] = useState(null);\n  const [title, setTitle] = useState('');\n  const [error, setError] = useState(null);\n\n  const searchMovie = () => {\n    getMovie(title)\n      .then((movie) => {\n        if (movie.Response === 'False') {\n          setError(`Can't find a movie with such a title`);\n          setFoundMovie(null);\n\n          return;\n        }\n\n        setFoundMovie({\n          title: movie.Title,\n          description: movie.Plot,\n          imgUrl: movie.Poster,\n          imdbUrl: `https://www.imdb.com/title/${movie.imdbId}`,\n          imdbId: movie.imdbID,\n        });\n      });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (!movies.some(movie => movie.imdbId === foundMovie.imdbId)) {\n      addMovie(foundMovie);\n\n      setFoundMovie(null);\n      setTitle('');\n    } else {\n      setError('This film is already exist in your list');\n    }\n  };\n\n  const handleChange = (event) => {\n    if (event.target.value !== title) {\n      setError(null);\n    }\n\n    setTitle(event.target.value);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label\n            className=\"label\"\n            htmlFor=\"movie-title\"\n          >\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={\n                classNames(\n                  'input',\n                  { 'is-danger': error },\n                )}\n              value={title}\n              onChange={handleChange}\n              autoComplete=\"off\"\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\">\n              {error}\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={searchMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {foundMovie && (\n          <MovieCard {...foundMovie} />\n        )}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = FindMovieShape;\n","import PropTypes from 'prop-types';\n\nexport const FindMovieShape = {\n  addMovie: PropTypes.func.isRequired,\n  movies: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    imgUrl: PropTypes.string.isRequired,\n    imdbUrl: PropTypes.string.isRequired,\n  }).isRequired).isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState([]);\n\n  const addMovie = (newMovie) => {\n    setMovies(prevMovies => [...prevMovies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        {movies.length\n          ? <MoviesList movies={movies} />\n          : (\n            <h2>\n              Add movies to your list\n            </h2>\n          )\n        }\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          movies={movies}\n          addMovie={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}